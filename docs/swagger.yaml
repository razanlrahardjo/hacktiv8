basePath: /api/v1/master
definitions:
  lib.Response:
    properties:
      message:
        description: response message
        type: string
      status:
        description: http status
        type: integer
    type: object
  model.Status:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        type: integer
      status_text:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
  model.Todo:
    properties:
      created_at:
        format: date-time
        type: string
      description:
        type: string
      due_date:
        type: string
      id:
        type: integer
      person_in_charge:
        type: string
      status:
        type: string
      title:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
  model.User:
    properties:
      created_at:
        format: date-time
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        format: date-time
        type: string
    type: object
host: http://localhost:9000
info:
  contact:
    email: razanlrahardjo@gmail.com
    name: Developer
  description: API Documentation
  termsOfService: http://localhost:9000
  title: Master API
  version: 1.0.0
paths:
  /:
    get:
      consumes:
      - application/json
      description: show basic response
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: not found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/lib.Response'
      summary: show basic response
      tags:
      - Index
  /status:
    get:
      consumes:
      - application/json
      description: List of status features
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Status'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: List of status features
      tags:
      - Status
    post:
      consumes:
      - application/json
      description: Create new status
      parameters:
      - description: Status ID
        in: header
        name: X-Status-ID
        type: string
      - description: Status data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Create new status
      tags:
      - Status
  /status/{id}:
    delete:
      consumes:
      - application/json
      description: StatusDelete status feature by id
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: StatusDelete status feature by id
      tags:
      - Status
    get:
      consumes:
      - application/json
      description: Get an status feature by id
      parameters:
      - description: Status ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Get an status feature by id
      tags:
      - Status
    put:
      consumes:
      - application/json
      description: Update status feature by id
      parameters:
      - description: Status ID
        in: header
        name: X-Status-ID
        type: string
      - description: Status ID
        in: path
        name: id
        required: true
        type: string
      - description: Status data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Status'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Update status feature by id
      tags:
      - Status
  /todos:
    get:
      consumes:
      - application/json
      description: List of todo features
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Todo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: List of todo features
      tags:
      - Todo
    post:
      consumes:
      - application/json
      description: Create new todo
      parameters:
      - description: Todo ID
        in: header
        name: X-Todo-ID
        type: string
      - description: Todo data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Create new todo
      tags:
      - Todo
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: TodoDelete todo feature by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: TodoDelete todo feature by id
      tags:
      - Todo
    get:
      consumes:
      - application/json
      description: Get an todo feature by id
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Get an todo feature by id
      tags:
      - Todo
    put:
      consumes:
      - application/json
      description: Update todo feature by id
      parameters:
      - description: Todo ID
        in: header
        name: X-Todo-ID
        type: string
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Todo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Todo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Update todo feature by id
      tags:
      - Todo
  /users:
    post:
      consumes:
      - application/json
      description: Create new user
      parameters:
      - description: User ID
        in: header
        name: X-User-ID
        type: string
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Create new user
      tags:
      - User
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: UserDelete user feature by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lib.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: UserDelete user feature by id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user feature by id
      parameters:
      - description: User ID
        in: header
        name: X-User-ID
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lib.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/lib.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lib.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/lib.Response'
      summary: Update user feature by id
      tags:
      - User
schemes:
- http
swagger: "2.0"
